name: CI
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - 'master'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  GOLANG_VERSION: 1.24.3

permissions:
  contents: read
  pull-requests: read
  checks: write

jobs:
  lint-docker:
      runs-on: ubuntu-latest
      name: Dockerfile lint
      steps:
          - run: echo "github ref is ${{ github.head_ref }} ${{ github.base_ref }}"
          - uses: actions/checkout@v4
          - uses: hadolint/hadolint-action@v3.1.0
            with:
              dockerfile: Dockerfile.goreleaser
          - uses: hadolint/hadolint-action@v3.1.0
            with:
              dockerfile: Dockerfile.goreleaser-debug

  lint-go:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GOLANG_VERSION }}
    - name: Verify dependencies
      run: go mod verify
    - run: go vet ./...
    - name: Check Format
      run: if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then exit 1; fi
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v8
      with:
        version: v2.1
        only-new-issues: true

  test-helm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: azure/setup-helm@v4
        with:
          version: v3.17.3
      - name: Install helm-unittest plugin
        run: helm plugin install https://github.com/helm-unittest/helm-unittest
      - name: Run tests
        run: helm unittest deploy/gateway

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GOLANG_VERSION }}

      - name: Run Tests
        run: make test-with-coverage

      - name: Setup Docker
        uses: docker/setup-docker-action@v4
      - name: Run Integration Tests
        run: make test-integration-with-coverage

      - name: Send coverage to Coveralls
        env:
          COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
        run: |
          go install github.com/mattn/goveralls@latest
          make coverall


  build:
    runs-on: ubuntu-latest
    needs: [lint-docker, lint-go, test, test-helm]
    env:
      REGISTRY: ghcr.io/twingate
      DOCKER_BUILDX_CACHE: --cache-to type=gha,mode=max --cache-from type=gha
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GOLANG_VERSION }}

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Expose GitHub Runtime (ACTION_* env vars required for docker caching)
      uses: crazy-max/ghaction-github-runtime@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Install GoReleaser
      uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: "~> v2"
        install-only: true

    - name: Build or Publish
      env:
        VERSION_PRERELEASE: dev
      run: make build
