{
  "$schema": "https://json-schema.org/schema#",
  "type": "object",
  "title": "JSON schema for Twingate Gateway Helm Chart values",
  "required": ["twingate", "tls"],
  "properties": {
    "twingate": {
      "type": "object",
      "required": ["network"],
      "properties": {
        "network": {
          "type": "string",
          "description": "The name of the Twingate network to use."
        },
        "host": {
          "type": "string",
          "description": "Twingate host.",
          "default": "twingate.com"
        },
        "resource": {
          "type": "object",
          "required": ["enabled"],
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable TwingateResource CRD integration."
            },
            "extraAnnotations": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Extra annotations to add to the ClusterIP service."
            }
          }
        }
      },
      "additionalProperties": false
    },
    "command": {
      "type": "array",
      "items": { "type": "string" }
    },
    "tls": {
      "type": "object",
      "properties": {
        "existingSecret": {
          "type": "string",
          "description": "Name of an existing secret containing TLS certs."
        },
        "autoGenerated": {
          "type": "boolean",
          "description": "Whether to auto-generate TLS certificates.",
          "default": true
        },
        "ipAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "IP addresses to include in the certificate."
        },
        "dnsNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "DNS names to include in the certificate."
        },
        "cert": {
          "type": "string",
          "description": "TLS certificate content (PEM format)."
        },
        "key": {
          "type": "string",
          "description": "TLS private key content (PEM format)."
        },
        "ca": {
          "type": "string",
          "description": "TLS CA certificate (PEM format)."
        }
      },
      "additionalProperties": false
    },
    "service": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "enum": ["ClusterIP", "NodePort", "LoadBalancer"],
          "default": "ClusterIP"
        }
      }
    },
    "metrics": {
      "type": "object",
      "properties": {
        "podMonitor": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Create PodMonitor resource(s) for scraping metrics using PrometheusOperator.",
              "default": false
            },
            "interval": {
              "type": "string",
              "description": "The interval at which metrics should be scraped.",
              "default": "30s"
            },
            "scrapeTimeout": {
              "type": "string",
              "description": "The timeout after which the scrape is ended.",
              "default": ""
            },
            "relabelings": {
              "type": "array",
              "description": "Metrics RelabelConfigs to apply to samples before scraping.",
              "default": [],
              "items": {}
            },
            "metricRelabelings": {
              "type": "array",
              "description": "Metrics RelabelConfigs to apply to samples before ingestion.",
              "default": [],
              "items": {}
            },
            "honorLabels": {
              "type": "boolean",
              "description": "Specify honorLabels parameter to add the scrape endpoint.",
              "default": false
            },
            "additionalLabels": {
              "type": "object",
              "description": "Additional labels that can be used so PodMonitor resource(s) can be discovered by Prometheus",
              "default": {}
            }
          }
        },
        "serviceMonitor": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Create ServiceMonitor resource(s) for scraping metrics using PrometheusOperator.",
              "default": false
            },
            "interval": {
              "type": "string",
              "description": "The interval at which metrics should be scraped.",
              "default": "30s"
            },
            "scrapeTimeout": {
              "type": "string",
              "description": "The timeout after which the scrape is ended.",
              "default": ""
            },
            "relabelings": {
              "type": "array",
              "description": "Metrics RelabelConfigs to apply to samples before scraping.",
              "default": [],
              "items": {}
            },
            "metricRelabelings": {
              "type": "array",
              "description": "Metrics RelabelConfigs to apply to samples before ingestion.",
              "default": [],
              "items": {}
            },
            "honorLabels": {
              "type": "boolean",
              "description": "Specify honorLabels parameter to add the scrape endpoint.",
              "default": false
            },
            "additionalLabels": {
              "type": "object",
              "description": "Additional labels that can be used so ServiceMonitor resource(s) can be discovered by Prometheus",
              "default": {}
            }
          }
        },
        "grafanaDashboard": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Create Grafana Dashboard for Kubernetes Access Gateway.",
              "default": false
            },
            "labels": {
              "type": "object",
              "description": "Labels that can be used to auto-discover and provision dashboards from ConfigMaps by Grafana.",
              "default": {
                "grafana_dashboard": "1"
              }
            }
          }
        },
        "prometheusRule": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Create a custom prometheusRule Resource for scraping metrics using PrometheusOperator",
              "default": false
            },
            "rules": {
              "type": "array",
              "description": "Custom Prometheus rules",
              "default": [],
              "items": {}
            },
            "additionalLabels": {
              "type": "object",
              "description": "Additional labels for the prometheusRule",
              "default": {}
            }
          }
        }
      },
      "additionalProperties": false
    }
  }
}
