# Default values for Twingate Kubernetes Access Gateway.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

twingate:
  network: ""
  resource:
    enabled: false
    extraAnnotations: {}
#      # Resource alias is included in the auto-generated TLS cert
#      resource.twingate.com/alias: "myk8s.int"

clusterDomain: cluster.local

# Gateway deployment
replicaCount: 1

image:
  repository: twingate/kubernetes-access-gateway
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext:
  seccompProfile:
    type: RuntimeDefault

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  allowPrivilegeEscalation: false
  runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Additional volumes on the output Deployment definition.
volumes: []

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}


# TLS configuration for the Gateway
tls:
  # Name of a secret containing the certificates
  existingSecret: ""
  # Auto-generate certificates
  autoGenerated: true
  # IP address to be included as Subject Alternative Names in the TLS cert
  ipAddresses: []
  # DNS names to be included as Subject Alternative Names in the TLS cert
  dnsNames: []
  # Content of the certificate to be added to the secret
  cert: ""
  # Content of the certificate key to be added to the secret
  key: ""
  # Content of the certificate CA to be added to the secret
  ca: ""

# Gateway Service properties
service:
  type: ClusterIP
  # This can be used to set the LoadBalancer service type to internal only.
  # For more information checkout: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  annotations: {}

livenessProbe:
  httpGet:
    port: https
    scheme: HTTPS
    path: /healthz
  initialDelaySeconds: 5
  periodSeconds: 5

readinessProbe:
  httpGet:
    port: https
    scheme: HTTPS
    path: /healthz
  initialDelaySeconds: 5
  periodSeconds: 5

containerPorts:
  https: 8443
  metrics: 9090

metrics:
  # Prometheus Pod Monitor
  # For more information checkout: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#monitoring.coreos.com/v1.PodMonitor
  podMonitor:
    enabled: false
    interval: 15s
    scrapeTimeout: ""
    relabelings: []
    metricRelabelings: []
    honorLabels: false
    additionalLabels: {}
